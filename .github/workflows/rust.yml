name: Rust CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:

  define-matrix:
    runs-on: ubuntu-latest

    outputs:
      features: ${{ steps.features.outputs.features }}

    steps:
      - uses: actions/checkout@v3
      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Define Features
        id: features
        run: |
          python3 test-feature-matrix.py echo >> "$GITHUB_OUTPUT"

  gotcha-test:
    runs-on: ubuntu-latest
    needs: define-matrix
    strategy:
      matrix:
        features: ${{ fromJSON(needs.define-matrix.outputs.features) }}

    steps:
      - uses: actions/checkout@v3

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2

      - name: Run tests
        run: cargo test --package gotcha  --features "${{ matrix.features }}"
  
  gotcha-cf-worker-test:
    runs-on: ubuntu-latest
    needs: define-matrix
    strategy:
      matrix:
        features: ${{ fromJSON(needs.define-matrix.outputs.features) }}
    steps:
      - uses: actions/checkout@v3

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2

      - name: Run tests
        run: cargo test --package gotcha --no-default-features --features "cloudflare-worker ${{ matrix.features }}"

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2

      - name: Run tests (gotcha_macro and gotcha_core)
        run: |
          cargo test -p gotcha_macro --all-features
          cargo test -p gotcha_core --all-features

      - name: Run tests (gotcha_macro and gotcha_core, no default features)
        run: |
          cargo test -p gotcha_macro --no-default-features
          cargo test -p gotcha_core --no-default-features

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2

      - name: Run clippy
        run: cargo clippy --all-features --workspace -- -D warnings

  fmt:
    name: Formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt

      - name: Check formatting
        run: cargo fmt --all -- --check 